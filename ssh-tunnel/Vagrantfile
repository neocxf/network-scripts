# -*- mode: ruby -*-
# vi: set ft=ruby :
# vagrant plugin install vagrant-vbguest

name = 'saucy'
IP   = {
  'saucy' => '192.168.60.123',
  'client1' => '192.168.60.101',
  'client2' => '192.168.60.102'
}

def setup_scenario
  authorized_keys = File::read(File::expand_path('~/.ssh/id_rsa.pub'))

  # create the sshd_config
  "cat > /etc/ssh/sshd_config <<-IOF\n#{SSHD_CONFIG}\nIOF\n" +
  %w{client1 client2}.map do |client|
    # configure the scenario for each client
    <<EOF
# for ubuntu 
# useradd -s /bin/false #{client}
adduser -s /bin/false -D #{client}
mkdir -p /home/#{client}/.ssh
cat > /home/#{client}/.ssh/authorized_keys <<-IOF
#{authorized_keys}
IOF
chown -R #{client}:#{client} /home/#{client}/.ssh
EOF
  end.join("\n")
end

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.provider "virtualbox" do |vb|
    vb.cpus = 2
    vb.memory = 256
    vb.check_guest_additions = false
  end
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.vm.box = "alpine-linux/alpine-x86_64"
  config.vbguest.auto_update = false

  config.vm.define name do |c|
    c.vbguest.auto_update = false
    c.vm.hostname = name
    c.vm.network "private_network", ip: IP[name]

    c.vm.provision "shell", inline: "sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories"
    c.vm.provision "shell", inline: "apk add openssh-server"
    c.vm.provision "shell", inline: setup_scenario
  end

  %w{client1 client2}.each do |name|
    config.vm.define name do |c|
      c.vbguest.auto_update = false
      # c.vm.box = "alpine/alpine64"
      c.vm.network 'private_network', ip: IP[name]
      c.vm.hostname = name
      c.vm.provision "shell", inline: "sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories"
    end
  end

end

SSHD_CONFIG=<<EOF
Port 22
Protocol 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
UsePrivilegeSeparation yes
SyslogFacility AUTH
LogLevel INFO
LoginGraceTime 120
PermitRootLogin yes
StrictModes yes
RSAAuthentication yes
PubkeyAuthentication yes
UsePAM yes
IgnoreRhosts yes
RhostsRSAAuthentication no
HostbasedAuthentication no
PermitEmptyPasswords no
ChallengeResponseAuthentication no
PasswordAuthentication yes
X11Forwarding no
TCPKeepAlive yes
AcceptEnv LANG LC_*
GatewayPorts no
AllowTcpForwarding remote
EOF